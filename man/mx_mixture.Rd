% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mx_mixture.R
\name{mx_mixture}
\alias{mx_mixture}
\title{Estimate mixture models using OpenMx}
\usage{
mx_mixture(model, classes = 1L, data = NULL, ...)
}
\arguments{
\item{model}{Syntax for the model; either a character string, or a list of
character strings, or a list of \code{mxModel} objects. See Details.}

\item{classes}{A vector of integers, indicating which class solutions to
generate. Defaults to 1L. E.g., \code{classes = 1:6},
\code{classes = c(1:4, 6:8)}.}

\item{data}{The data.frame to be used for model fitting.}

\item{...}{Additional arguments, passed to functions.}
}
\value{
Returns an \code{\link[OpenMx]{mxModel}} with free parameters updated
to their final values.
}
\description{
Dynamically creates a batch of mixture models, with intelligent
defaults. This function is a wrapper around \code{mplusObject} and
\code{mplusModeler}, and the respective arguments of those functions can be
passed on using \code{...}. For instance, passing the argument
\code{run = 1L} means that the models will be evaluated and returned.
}
\details{
In the arguments \code{model_class_specific} and \code{SAVEDATA}, the
character string \dQuote{\{C\}} is substituted with the correct class number.
The character string \dQuote{\{filename_stem\}} is substituted with the
filename stem, for example, to name savedata in line with the input files.

In all arguments to \code{mplusObject}, a double space (\dQuote{  }) is
replaced with a newline character. This can be used to obtain nicely
formatted Mplus syntax.

Model syntax can be specified in three ways, for ease of use and
}
\examples{
\dontrun{
# Example 1: Dynamic model generation using {C}
df <- iris[, 1, drop = FALSE]
names(df) <- "x"
mx_mixture(model = "x ~ m{C}*1
                    x ~~ v{C}*x", classes = 1, data = df)
# Example 2: Manually specified class-specific models
df <- iris[1:2]
names(df) <- c("x", "y")
mx_mixture(model = list("y ~ a*x",
                        "y ~ b*x"),
                        meanstructure = TRUE,
                        data = df) -> res

# Example 3: Latent growth model
df <- empathy[1:6]
mx_mixture(model = "i =~ 1*ec1 + 1*ec2 + 1*ec3 +1*ec4 +1*ec5 +1*ec6
                    s =~ 0*ec1 + 1*ec2 + 2*ec3 +3*ec4 +4*ec5 +5*ec6",
                    meanstructure = TRUE, int.ov.free = FALSE,
                    int.lv.free = TRUE, auto.fix.first = TRUE,
                    auto.fix.single = TRUE, auto.var = TRUE,
                    auto.cov.lv.x = TRUE, auto.efa = TRUE,
                    auto.th = TRUE, auto.delta = TRUE,
                    auto.cov.y = TRUE,
                    classes = 2,
                    data = df) -> res
}
}
\keyword{mixture}
\keyword{models}
\keyword{openmx}
